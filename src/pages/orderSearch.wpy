<template>
	<!-- 搜索框 -->
	<view class="top_container">
		<view class="search_container">
			<i class="iconfont icon-search"></i>
			<input type="text" name="searchContent" confirm-type="搜索" placeholder="请输入客户名称" placeholder-style="color:#d6dde6" bindblur="inputFinish" bindconfirm="searchConfirm" />
		</view>
		<view class="btn_search" @tap="searchConfirm">搜索</view>
	</view>
	<!-- 日期选择器 -->
	<view class="middletop_container">
		<picker mode="date" value="{{startDate}}" start="2000-01-01" end="2030-12-31" bindchange="startDateChange">
			<view class="startDatePicker">
				{{startDate}}
				<i class="iconfont icon-sarrowbottom"></i>
			</view>
		</picker>
		<text>|</text>
		<picker mode="date" value="{{endDate}}" start="2000-01-01" end="2030-12-31" bindchange="endDateChange">
			<view class="endDatePicker">
				{{endDate}}
				<i class="iconfont icon-sarrowbottom"></i>
			</view>
		</picker>
	</view>
	<view class="line"></view>
	<scroll-view scroll-y="true" class="swiper-item-box" bindscrolltoupper="onRefreshData" bindscrolltolower="onReachBottom" style="height:{{windowHeight-140}}px">
	<view class="middle_container">
		<repeat for="{{msg}}" key="index" index="index" item="item">
			<view class="list_item">
				<view style="font-size:28rpx;color:#999;margin-bottom:20rpx;">
					<text style="margin-left:30rpx;">客户名称：{{item.ddwname}}</text>
				</view>
				<view class="line"></view>
				<view style="display:flex;align-items:center;justify-content:space-between;margin-top:20rpx;margin-bottom:20rpx;">
					<text style="text-align:center;width:30%;">单号</text>
					<text style="text-align:center;width:30%;">日期</text>
					<text style="text-align:center;width:30%;">金额</text>
				</view>
				<view class="line"></view>
				<repeat for="{{item.dataItem}}" key="index" index="index" item="items">
					<view @tap.stop="onItemClick" data-item="{{item}}" data-items="{{items}}" data-index="{{index}}" style="display:flex;align-items:center;justify-content:space-between;margin-top:25rpx;">
						<text style="text-align:center;width:30%;">{{items.danjbh}}</text>
						<text style="text-align:center;width:30%;">{{items.riqi}}</text>
						<text style="text-align:center;width:30%;">{{items.jine}}</text>
					</view>
				</repeat>
			</view>
		</repeat>
	</view>
	<view style="text-align:center;margin-top:100rpx;" wx:if="{{isEmpty}}">
		<i class="iconfont icon-error" style="font-size:90rpx;color:#dce6ee"></i>
		<view></view>
		<text style="font-size:30rpx;color:#dce6ee">没有数据</text>
	</view>
	</scroll-view>
	<view class="bottom_container">
		订单金额总计：{{total}}
	</view>

	<view class="attrmask" catchouchmove="preventTouchMove" @tap="touchCustMask" wx:if="{{showCustSearch}}"></view>
	
	<view class="modalDlg_cust" wx:if="{{showCustSearch}}">
		<scroll-view scroll-y="true" style="height:200px">
		<repeat for="{{searchCustNameList}}" key="index" index="index" item="item">
			<view style="height:50px;line-height:50px" data-index="{{index}}" @tap="onCustNameClick">{{item.ddwname}}</view>
		</repeat>
		</scroll-view>
		</view>
</template>

<script>
import wepy from 'wepy'
import util from '@/utils/util'
import tip from '@/utils/tip'
import api from '@/api/api'
import { SYSTEM_INFO } from '@/utils/constant'
export default class OrderSearch extends wepy.page{
	config = {
		navigationBarTitleText:'订单查询'
	}

	data = {
		windowHeight:0,
		startDate:'2018-08-12',
		endDate:'2020-08-12',
		msg:[],
		total:0,
		showCustSearch:false,
		searchCustNameList:[],
		isEmpty:false,
		searchContent:'',
		custId:'',
		currentPage:0
	}

	onLoad(){
		// 获取系统屏幕高度
		let systemInfo = wx.getStorageSync(SYSTEM_INFO);			
		if(systemInfo==null||systemInfo==""||systemInfo==undefined){
			systemInfo = wepy.getSystemInfoSync();
       		wepy.setStorageSync(SYSTEM_INFO, systemInfo);						
		}
		this.windowHeight = systemInfo.windowHeight;
		this.startDate = util.getCurrentTime('date');
		this.endDate = util.getCurrentTime('date');
		console.log(this.windowHeight)
		this.onLoadOrderMsg(this.startDate,this.endDate,null,this.currentPage)
		// for(let a = 0;a<8;a++){
		// 	this.searchCustNameList.push("item"+a)
		// }
	}

	startDateChange(e){
		console.log(e)
		this.startDate = e.detail.value
	}

	endDateChange(e){
		this.endDate = e.detail.value
	}

	async searchConfirm(e){
		console.log("searchConfirm Event")
		if(this.searchContent==''){
			this.onLoadOrderMsg(this.startDate,this.endDate,null,0)
			return
		}
		// 调用查询客户名称接口
		const json = await api.queryCustName({
			query:{
				fName:this.searchContent
			}
		})
		if(json.data.code==0){
			this.searchCustNameList = json.data.data
		}
		// for(let i = 0;i<8;i++){
		// 	let item = {};
		// 	item.ddwid = i;
		// 	item.ddwname = this.searchContent+i
		// 	item.ddwcode = 'code'+i
		// 	item.yingshye = 20+i
		// 	this.searchCustNameList.push(item)
		// }
		console.log("searchCustNameList===",this.searchCustNameList)

		if(this.searchCustNameList.length<=1){
			this.custId = this.searchCustNameList[0].ddwid
			// 只有一条客户数据，不显示弹窗，直接查询该客户订单信息
			// 调用接口
			this.currentPage = 0
			this.onLoadOrderMsg(this.startDate,this.endDate,this.custId,0)
		}else{
			// 多条客户数据，显示弹窗
			 this.showCustSearch = true
		}
		this.$apply()
		
	}

	inputFinish(e){
		this.searchContent = e.detail.value
	}

	/**
	 * 加载客户名称数据
	 */
	async onLoadOrderMsg(sq,eq,custId,page){
		const json = await api.orderQuery({
			query:{
				fBegDate:sq,
				fEndDate:eq,
				fCustId:custId==null?'':custId,
				fPage:page
			}
		})
		console.log("orderQuery===",json)
		if(json.data.code==0){
			if(page==0){
				this.msg = [];
			}
			
			// 先判断遍历的这行数据跟msg中最后一行数据的ddwname是否相同，如果相同则push到msg最后一行数据的dataItem中
			for(let i = 0; i<json.data.data.length;i++){
				this.total = json.data.data[0].hjje
				if(this.msg.length > 0){
					if(this.msg[this.msg.length-1].ddwname == json.data.data[i].ddwname){
						let dataItem = {}
						dataItem.riqi = json.data.data[i].riqi
						dataItem.danjbh = json.data.data[i].danjbh
						dataItem.jine = json.data.data[i].jine						
						this.msg[this.msg.length-1].dataItem.push(dataItem)
						continue	//进入下一个循环
					}
				}
				let item = {}
				item.ddwname = json.data.data[i].ddwname
				item.dataItem = []
				let dataItem = {}
				dataItem.riqi = json.data.data[i].riqi
				dataItem.danjbh = json.data.data[i].danjbh
				dataItem.jine = json.data.data[i].jine
				item.dataItem.push(dataItem)
				this.msg.push(item)
			}
			console.log("orderMsg==",this.msg)
		}else{
			tip.toast("网络连接失败！")
		}
		if(this.msg.length<=0){
			this.isEmpty = true
		}else{
			this.isEmpty = false
		}
		this.$apply()
	}

	onRefreshData(){
		this.currentPage = 0
		this.onLoadOrderMsg(this.startDate,this.endDate,this.custId,this.currentPage)
	}	

	onReachBottom(){
		this.currentPage++
		console.log("onReachBottom===",this.currentPage)
		this.onLoadOrderMsg(this.startDate,this.endDate,this.custId,this.currentPage)
	}

	methods = {
		onItemClick(e){
			let items = e.currentTarget.dataset.items
			let item = e.currentTarget.dataset.item
			console.log("items===",items,item)
			wx.navigateTo({
				url:'orderDetail?orderNo='+items.danjbh+'&custName='+item.ddwname
			})
		},
		touchCustMask(e){
			this.showCustSearch = false
		},
		onCustNameClick(e){
			let index = e.currentTarget.dataset.index
			this.custId = this.searchCustNameList[index].ddwid
			this.searchContent = this.searchCustNameList[index].ddwname
			this.onLoadOrderMsg(this.startDate,this.endDate,this.custId,0)
			this.showCustSearch = false
		}
	}
}	
</script>

<style lang="less">
	.top_container{
		display:flex;
		align-items:center;
		background:#fff;
		height:110rpx;
		.search_container{
			display:flex;
			align-items:center;
			width:60%;
			height:84rpx;
			line-height:84rpx;
			padding-left:20rpx;
			border-radius: 8rpx;
			margin-left:7%;
			border:1rpx solid #dce6ee;
			i{
				font-size:48rpx;
				color:#d6dde6;
			}
			input{
				margin-left:40rpx;
				font-size:32rpx;
				color:#666;
			}

		}
		.btn_search{
			width:18%;
			height:60rpx;
			line-height:60rpx;
			background:#0AF4AB;
			border-radius: 8rpx;
			font-size:28rpx;
			color:#fff;
			text-align:center;
			margin-left:7%;
		}
	}
	.middletop_container{
		display:flex;
		height:94rpx;
		background:#fff;
		align-items:center;
		justify-content:center;
		border-top:1rpx solid #d6dde6;
		.startDatePicker{
			margin-right:40rpx;
			font-size:28rpx;
			color:#666;
		}
		.endDatePicker{
			margin-left:40rpx;
			font-size:28rpx;
			color:#666;
		}
		text{
			color:#999;
			font-size:28rpx;
		}
	}
	.line{
		height:1rpx;
		width:90%;
		margin-left:5%;
		margin-top:-8rpx;
		border-bottom:1rpx solid #d6dde6;
	}
	.middle_container{
		font-size:28rpx;
		color:#666;
		margin-top:40rpx;
		padding:0 30rpx;
		.list_item{
			margin-top:30rpx;
			background:#fff;
			padding:30rpx 30rpx;
		}
	}
	.bottom_container{
		position:absolute;
		bottom:0;
		width:100%;
		font-size:36rpx;
		height:90rpx;
		line-height:90rpx;
		background:#0175fd;
		text-align:center;
		color:#fff;
	}
	.attrmask{
		width:100%;
		height:100%;
		position: fixed;
		top: 0;
		left: 0;
		background:#000;
		z-index:9000;
		opacity:0.4;
	}
	.modalDlg_cust{
		width:60%;
		height:200px;
		position:fixed;
		top:50%;
		left:0;
		z-index: 9999;
    	margin: -370rpx 20%;
		border-radius:5rpx;
		background:#fff;
		text-align:center;
	}

</style>